#!/bin/bash

PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin

function log() {
    echo "[$0] $*" >&2
}

storageAccountName="ENVIRONMENT_ACCOUNT_NAME"
reTest='E[A-Z]{10}_ACCOUNT_[A-Z]{4}'
if [[ "$storageAccountName" =~ ^$reTest$ ]]; then
	log "It appears the environment's storage account name ($storageAccountName) was not updated.  Please update and re-run the script."
	exit 0
fi

log "installing blobfuse ..."
apt-get update
apt-get install wget -y
wget https://packages.microsoft.com/config/ubuntu/18.04/packages-microsoft-prod.deb
dpkg -i packages-microsoft-prod.deb
apt-get update
apt-get install -y blobfuse

#Create the directories we'll use for blobfuse
#the scripts directory for re-mounting on reboot
mountDir="/etc/fuse.d"
mkdir -p "$mountDir"
mkdir -p "$mountDir/conf"
#the temp directory for caching during read/write
tmpBlobfuse="/tmp/blobfuse"
mkdir -p "$tmpBlobfuse"
#the 'commands' directory for provisioning new partners
hostCmdPath="/srv/sftp/mgmt"
mkdir -p "$hostCmdPath"

usrlocalbin="/usr/local/bin"
cronjobs="/etc/cron.d"

if [ -d "./install/bin" ]; then
	log "copying provisioning scripts ..."
	cp "./install/bin"/* "$usrlocalbin"
	for s in "$usrlocalbin"/*; do
		log "setting execute on $s ..."
		chmod +x $s
	done
	unset s
fi
if [ -d "./install/cron" ]; then
	log "copying cron jobs ..."
	cp "./install/cron"/* "$cronjobs"
fi
if [ -f "./install/ssh/sshd_config" ]; then
	log "copying ssh config ..."
	cp "./install/ssh/sshd_config" /etc/ssh/sshd_config
fi

#create the group for all sftp partner accounts if it doesn't already exist
getent group sftp-only > /dev/null || groupadd sftp-only

#create provisioning mount files and mount the container
provisioningCfg="$mountDir/conf/provisioning.cfg"
if [ ! -e "$provisioningCfg" ]; then
	echo "accountName $storageAccountName"$'\n'"authType MSI"$'\n'"containerName provisioning"$'\n' > "$provisioningCfg"
fi

provisionMountScript="$mountDir/mount-provisioning.sh"
if [ ! -e "$provisionMountScript" ]; then
	echo "#!/bin/bash"$'\n'"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"$'\n'"mount.sh $hostCmdPath $tmpBlobfuse $provisioningCfg true" > "$provisionMountScript"
	chmod +x $provisionMountScript
	$provisionMountScript
	
	if [ ! -d "$hostCmdPath/createpartnersftp" ]; then
		log "creating create partner command directories ..."
		mkdir -p "$hostCmdPath/createpartnersftp"
		mkdir -p "$hostCmdPath/createpartnersftp/processed"
		echo "blob anchor file." > "$hostCmdPath/createpartnersftp/processed/.anchor"
	fi
	if [ ! -d "$hostCmdPath/deletepartnersftp" ]; then
		log "creating delete partner command directories ..."
		mkdir -p "$hostCmdPath/deletepartnersftp"
		mkdir -p "$hostCmdPath/deletepartnersftp/processed"
		echo "blob anchor file." > "$hostCmdPath/deletepartnersftp/processed/.anchor"		
	fi
fi

mountBinScript="/usr/local/bin/create-partner-mount-files"
if [ -f "$mountBinScript" ]; then
	log "Setting Storage Account value in $mountBinScript ..."
	sed -i 's,'"STORAGE-ACCOUNT-NAME"','"$storageAccountName"',' "$mountBinScript"
fi

echo "Server setup is completed.  Please restart the server to confirm all functionality."
