#!/bin/bash
set -Eeo pipefail

PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin

# shellcheck disable=2154
trap 's=$?; echo "$0: Error on line "$LINENO": $BASH_COMMAND"; exit $s' ERR

# Extended regular expression (ERE) for arguments
reUser='[A-Za-z0-9._][A-Za-z0-9._-]{0,31}' # POSIX.1-2008

function log() {
    echo "[$0] $*"
}

function validateArg() {
    name="$1"
    val="$2"
    re="$3"

    if [[ "$val" =~ ^$re$ ]]; then
        return 0
    else
        log "ERROR: Invalid $name \"$val\", do not match required regex pattern: $re"
        return 1
    fi
}

log "Parsing user data: \"$1\""

user="$1"; validateArg "username" "$user" "$reUser" || exit 1

#unmount the blob
#TODO: this should have a better test (parse ps -aux maybe?)
if [ -d "/home/$user/files/incoming" ]; then
	#unmount and squash any errors or output
	fusermount -u "/home/$user/files" > /dev/null 2>& 1 
fi

#remove user's tmp directory
if [ -d "/tmp/blobfuse/$user" ]; then
	rm -rf "/tmp/blobfuse/$user" > /dev/null 2>& 1
fi

#remove the user account (also removes from group(s))
if ! getent passwd "$user" > /dev/null; then
    log "WARNING: User \"$user\" does not exist.  Continuing clean up if necessary"
else
	userdel -f "$user" 
fi

#remove user's home directory
if [ -d "/home/$user" ]; then
	rm -rf "/home/$user" > /dev/null 2>& 1
fi

#remove user's mount script
if [ -e "/etc/fuse.d/mount-$user.sh" ]; then
	rm -f "/etc/fuse.d/mount-$user.sh" > /dev/null 2>& 1
fi
#remove the user's blobfuse configuration file
if [ -e "/etc/fuse.d/conf/$user.cfg" ]; then
	rm -f "/etc/fuse.d/conf/$user.cfg" > /dev/null 2>& 1
fi