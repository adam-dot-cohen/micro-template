hostingContext:
  appName: "Data Quality"
  logLevel: DEBUG

vaults:
  insights:
    credentialType: "ClientSecret"
    url: "{env:KEY_VAULT_URL}"
    # App Registration with access to the key vault, i.e. laso-???-insights-datamanagement:
    tenantId: "{env:LASO_INSIGHTS_DATAMANAGEMENT_TENANT_ID}"    
    clientId: "{env:LASO_INSIGHTS_DATAMANAGEMENT_CLIENT_ID}"
    clientSecret: "{env:LASO_INSIGHTS_DATAMANAGEMENT_SECRET}"

runtime:
    encryptOutput: true
    internalFilesystemType: dbfs
    purgeTemporaryFiles: true
    applyBoundaryRules: false
    sparkLogLevel: WARN

storage:
  encryptionPolicies:
    laso:
      encryptionRequired: True
      cipher: AES_CBC_256
      vault: insights
      keyId: "Encryption-BlobAes256Key"

  accounts:
    insights:            
      storageAccount: "{env:STORAGE_ACCOUNT}" 
      dnsname: "{env:STORAGE_ACCOUNT_DNSNAME}"
      credentialType: ConnectionString
      connectionString: "{secret:insights:Connectionstrings-Storage-Insights}"

  filesystems:
    raw:
      account: insights
      type: abfss
      retentionPolicy: default
      encryptionPolicy: laso
    rejected:
      account: insights
      type: abfss
      retentionPolicy: default
      encryptionPolicy: laso
    curated:
      account: insights
      type: abfss
      retentionPolicy: default
      encryptionPolicy: laso

servicebus:
  namespaces:
    insights:
      credentialType: ConnectionString
      connectionString: "{secret:insights:Connectionstrings-ServiceBus-Insights}"
  topics:
    runtime-trigger:
       topic: dataqualitycommand
       subscription: AllEvents
    runtime-status:
       namespace: insights
       topic: datapipelinestatus

quality:
    csv:
        strict: False
        min_data_rows: 0
        header_check_row_count: 10
