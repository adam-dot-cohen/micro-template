pool:
  vmImage: 'Ubuntu-16.04'

trigger:
  batch: true
  branches:
    include:
    - develop
    - master 
  paths:
    include:
    - src/services/Identity/*
    - deploy/azure/terraform/applications/Insights/*

variables:
  imageName: 'laso-identity-api'
  buildVersion: '1.0.0.$(Build.BuildId)-pre'
  buildVersionTag: '1.0.0.$(Build.BuildId)-pre'
  buildTag: 'develop'
  registryConnectionName: 'container-crlasodev'
  
steps:
- bash: |
    echo "##vso[task.setvariable variable=registryConnectionName]container-crlasoprev"
    echo "##vso[task.setvariable variable=buildVersion]1.0.0.$(Build.BuildId)"
    echo "##vso[task.setvariable variable=buildVersionTag]1.0.0.$(Build.BuildId)-rc"
    echo "##vso[task.setvariable variable=buildTag]master"
  condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
- bash: |
      echo "##vso[build.addbuildtag]$(buildTag)"
- task: Docker@2
  inputs:
    containerRegistry: '$(registryConnectionName)'
    command: 'login'
  displayName: 'log in to docker registry: $(registryConnectionName)'
- task: Docker@2
  displayName: 'build container'
  inputs:
    containerRegistry: '$(registryConnectionName)'
    repository: '$(imageName)'
    command: 'build'
    Dockerfile: './src/services/Identity/Identity.Api/Dockerfile'
    buildContext: '$(Build.Repository.LocalPath)/src'
    tags: |
      $(Build.BuildId)
      $(buildVersionTag)
    arguments: '--build-arg  buildVersion=$(buildVersion)'
- task: Docker@2
  displayName: 'push container'
  inputs:
    containerRegistry: '$(registryConnectionName)'
    repository: '$(imageName)'
    command: 'push'
    tags: |
      $(Build.BuildId)
      $(buildVersionTag)
- task: CopyFiles@2
  displayName: 'Copy Terraform To Staging Directorey'
  inputs:
    SourceFolder: './deploy/azure/terraform'
    Contents: '**/*'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
- task: PublishBuildArtifacts@1
  displayName: Publish Artifacts
  condition: succeeded()
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'

