pool:
  vmImage: 'Ubuntu-16.04'

trigger:
  batch: true
  branches:
    include:
    - develop
  paths:
    include:
    - src/services/Identity/*
    - deploy/azure/terraform/applications/Insights/*

variables:
  imageName: 'laso-identity-api'
  buildVersion: '1.0.0.$(Build.BuildId)-pre'
  
steps:


- task: Docker@2
  inputs:
    containerRegistry: 'container-crlasodev'
    command: 'login'
  displayName: 'log in to docker registry'

- task: Docker@2
  displayName: 'build container'
  inputs:
    containerRegistry: 'container-crlasodev'
    repository: '$(imageName)'
    command: 'build'
    Dockerfile: './src/services/Identity/Identity.Api/Dockerfile'
    buildContext: '$(Build.Repository.LocalPath)/src'
    tags: |
      $(Build.BuildId)
      $(buildVersion)
    arguments: '--build-arg  buildVersion=$(buildVersion)'


- task: Docker@2
  displayName: 'push container'
  inputs:
    containerRegistry: 'container-crlasodev'
    repository: '$(imageName)'
    command: 'push'
    tags: |
      $(Build.BuildId)
      $(buildVersion)



# - task: Docker@2
#   displayName: Build Identity API container
#   inputs:
#     containerRegistry: 'container-crlasodev'
#     repository: '$(imageName)'
#     command: 'buildAndPush'
#     Dockerfile: './src/services/Identity/Identity.Api/Dockerfile'
#     buildContext: '$(Build.Repository.LocalPath)/src'
#     tags: |
#       $(Build.BuildId)
#       $(buildVersion)
#     arguments: ''

    
- task: CopyFiles@2
  displayName: 'Copy Terraform To Staging Directorey'
  inputs:
    SourceFolder: './deploy/azure/terraform'
    Contents: '**/*'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'


- task: PublishBuildArtifacts@1
  displayName: Publish Artifacts
  condition: succeeded()
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'


