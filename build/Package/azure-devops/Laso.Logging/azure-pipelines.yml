name: '1.0.0.$(Build.BuildId)'
pool:
  vmImage: 'ubuntu-latest'

trigger:
  branches:
    include:
    - develop
  paths:
    include:
    - src/framework/Laso.Logging/*

variables:
  buildConfiguration: 'Release'
  buildVersion: '1.0.0.$(Build.BuildId)'

steps:

- task: UseDotNet@2
  displayName: 'Use .NET Core sdk'
  inputs:
    version: '3.1.x'

- script: |
    dotnet build ./src/framework/Laso.Logging/ --configuration $(buildConfiguration) /property:Version=$(buildVersion)
    dotnet test ./src/framework/Laso.Logging/Laso.Logging.UnitTests/ --configuration $(buildConfiguration) --logger "trx;LogFileName=testresults.trx"
    dotnet test ./src/framework/Laso.Logging/Laso.Logging.UnitTests/ --configuration $(buildConfiguration) /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:CoverletOutput=$(System.DefaultWorkingDirectory)/TestResults/Coverage/
    cd ./src/framework/Laso.Logging/Laso.Logging.UnitTests/
   # dotnet reportgenerator "-reports:$(System.DefaultWorkingDirectory)/TestResults/Coverage/coverage.cobertura.xml" "-targetdir:$(System.DefaultWorkingDirectory)/TestResults/Coverage/Reports" "-reportTypes:htmlInline" "-tag:$(Build.BuildNumber)"
  failOnStderr: true

- task: CopyFiles@2
  displayName: 'Copy Nupkg to staging'
  inputs:
    Contents: |
      **/bin/**/*.nupkg
      !**/*1.0.0.nupkg
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
    flattenFolders: true


- task: PublishBuildArtifacts@1
  displayName: Publish Artifacts
  condition: succeeded()
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'

- task: NuGetCommand@2
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
    nuGetFeedType: 'external'
    publishFeedCredentials: 'Laso.Myget'
    verbosityPush: 'Normal'